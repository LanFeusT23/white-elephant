[debug] [2020-12-12T19:49:39.310Z] ----------------------------------------------------------------------
[debug] [2020-12-12T19:49:39.311Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\johnp\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start
[debug] [2020-12-12T19:49:39.311Z] CLI Version:   8.18.1
[debug] [2020-12-12T19:49:39.312Z] Platform:      win32
[debug] [2020-12-12T19:49:39.312Z] Node Version:  v12.20.0
[debug] [2020-12-12T19:49:39.312Z] Time:          Sat Dec 12 2020 11:49:39 GMT-0800 (Pacific Standard Time)
[debug] [2020-12-12T19:49:39.313Z] ----------------------------------------------------------------------
[debug] [2020-12-12T19:49:39.313Z] 
[debug] [2020-12-12T19:49:39.318Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-12-12T19:49:39.318Z] > authorizing via signed-in user
[info] i  emulators: Starting emulators: auth, functions, firestore, hosting {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: auth, functions, firestore, hosting"}}
[debug] [2020-12-12T19:49:39.331Z] [hub] writing locator at C:\Users\johnp\AppData\Local\Temp\hub-white-elephant-capps.json
[warn] !  functions: The following emulators are not running, calls to these services from the Functions emulator will affect production: database, pubsub {"metadata":{"emulator":{"name":"functions"},"message":"The following emulators are not running, calls to these services from the Functions emulator will affect production: \u001b[1mdatabase, pubsub\u001b[22m"}}
[info] +  functions: Using node@12 from host. {"metadata":{"emulator":{"name":"functions"},"message":"Using node@12 from host."}}
[debug] [2020-12-12T19:49:39.346Z] defaultcredentials: writing to file C:\Users\johnp\AppData\Roaming\firebase\john_pombo_gmail.com_application_default_credentials.json
[debug] [2020-12-12T19:49:39.347Z] Setting GAC to C:\Users\johnp\AppData\Roaming\firebase\john_pombo_gmail.com_application_default_credentials.json {"metadata":{"emulator":{"name":"functions"},"message":"Setting GAC to C:\\Users\\johnp\\AppData\\Roaming\\firebase\\john_pombo_gmail.com_application_default_credentials.json"}}
[debug] [2020-12-12T19:49:39.352Z] Ignoring unsupported arg: projectId {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: projectId"}}
[debug] [2020-12-12T19:49:39.352Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2020-12-12T19:49:39.352Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\johnp\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.11.11.jar","--host","localhost","--port",8080,"--rules","D:\\git\\white-elephant\\firestore.rules","--functions_emulator","localhost:5001"],"optionalArgs":["port","webchannel_port","host","rules","functions_emulator","seed_from_export"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\johnp\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.11.11.jar\",\"--host\",\"localhost\",\"--port\",8080,\"--rules\",\"D:\\\\git\\\\white-elephant\\\\firestore.rules\",\"--functions_emulator\",\"localhost:5001\"],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"functions_emulator\",\"seed_from_export\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[debug] [2020-12-12T19:49:41.993Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/white-elephant-capps/webApps/-/config  
 
[debug] [2020-12-12T19:49:42.404Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sat, 12 Dec 2020 19:49:43 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  hosting: Serving hosting files from: dist {"metadata":{"emulator":{"name":"hosting"},"message":"Serving hosting files from: \u001b[1mdist\u001b[22m"}}
[info] +  hosting: Local server: http://localhost:5000 {"metadata":{"emulator":{"name":"hosting"},"message":"Local server: \u001b[4m\u001b[1mhttp://localhost:5000\u001b[22m\u001b[24m"}}
[debug] [2020-12-12T19:49:42.434Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2020-12-12T19:49:42.434Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2020-12-12T19:49:42.434Z] Starting Emulator UI with command {"binary":"node","args":["C:\\Users\\johnp\\.cache\\firebase\\emulators\\ui-v1.3.0\\server.bundle.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"C:\\\\Users\\\\johnp\\\\.cache\\\\firebase\\\\emulators\\\\ui-v1.3.0\\\\server.bundle.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2020-12-12T19:49:42.517Z] Web / API server started at http://localhost:4000
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at http://localhost:4000\n"}}
[info] i  functions: Watching "D:\git\white-elephant\functions" for Cloud Functions... {"metadata":{"emulator":{"name":"functions"},"message":"Watching \"D:\\git\\white-elephant\\functions\" for Cloud Functions..."}}
[debug] [2020-12-12T19:49:42.719Z] [worker-pool] addWorker(~diagnostic~) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(~diagnostic~)"}}
[debug] [2020-12-12T19:49:42.719Z] [worker-pool] Adding worker with key ~diagnostic~, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key ~diagnostic~, total=1"}}
[debug] [2020-12-12T19:49:42.719Z] [worker-pool] submitWork(triggerId=) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitWork(triggerId=)"}}
[debug] [2020-12-12T19:49:42.719Z] [worker-~diagnostic~-1aff868b-fcb1-4afb-8932-6cd15dae78ac]: Assigning socketPath: \\?\pipe\D:\git\white-elephant\functions\10868 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-~diagnostic~-1aff868b-fcb1-4afb-8932-6cd15dae78ac]: Assigning socketPath: \\\\?\\pipe\\D:\\git\\white-elephant\\functions\\10868"}}
[debug] [2020-12-12T19:49:42.720Z] [worker-~diagnostic~-1aff868b-fcb1-4afb-8932-6cd15dae78ac]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-~diagnostic~-1aff868b-fcb1-4afb-8932-6cd15dae78ac]: BUSY"}}
[debug] [2020-12-12T19:49:42.858Z] [runtime-status] [10868] Functions runtime initialized. {"cwd":"D:\\git\\white-elephant\\functions","node_version":"12.20.0"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Functions runtime initialized. {\"cwd\":\"D:\\\\git\\\\white-elephant\\\\functions\",\"node_version\":\"12.20.0\"}"}}
[debug] [2020-12-12T19:49:42.859Z] [runtime-status] [10868] Disabled runtime features: undefined {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Disabled runtime features: undefined"}}
[debug] [2020-12-12T19:49:42.860Z] [runtime-status] [10868] Resolved module firebase-admin {"declared":true,"installed":true,"version":"9.4.2","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-admin\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"9.4.2\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-admin\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-12T19:49:42.861Z] [runtime-status] [10868] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-12T19:49:42.862Z] [runtime-status] [10868] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-12T19:49:42.863Z] [runtime-status] [10868] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2020-12-12T19:49:42.864Z] [runtime-status] [10868] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-12T19:49:42.893Z] [runtime-status] [10868] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Checked functions.config() {\"config\":{}}"}}
[debug] [2020-12-12T19:49:42.893Z] [runtime-status] [10868] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"}} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}}"}}
[debug] [2020-12-12T19:49:42.893Z] [runtime-status] [10868] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-12T19:49:42.894Z] [runtime-status] [10868] Resolved module firebase-admin {"declared":true,"installed":true,"version":"9.4.2","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-admin\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"9.4.2\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-admin\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-12T19:49:42.894Z] [runtime-status] [10868] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-12T19:49:42.894Z] [runtime-status] [10868] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"9.4.2","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-admin\\lib\\index.js"}} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [10868] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"9.4.2\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-admin\\\\lib\\\\index.js\"}}"}}
[info] +  functions[helloWorld]: http function initialized (http://localhost:5001/white-elephant-capps/us-central1/helloWorld). {"metadata":{"emulator":{"name":"functions"},"message":"\u001b[1mhttp\u001b[22m function initialized (http://localhost:5001/white-elephant-capps/us-central1/helloWorld)."}}
[info] 
┌────────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! View status and logs at localhost:4000 │
└────────────────────────────────────────────────────────────────┘

┌────────────────┬────────────────┬──────────────────────────┐
│ Emulator       │ Host:Port      │ View in Emulator UI      │
├────────────────┼────────────────┼──────────────────────────┤
│ Authentication │ localhost:9099 │ localhost:4000/auth      │
├────────────────┼────────────────┼──────────────────────────┤
│ Functions      │ localhost:5001 │ localhost:4000/functions │
├────────────────┼────────────────┼──────────────────────────┤
│ Firestore      │ localhost:8080 │ localhost:4000/firestore │
├────────────────┼────────────────┼──────────────────────────┤
│ Hosting        │ localhost:5000 │ n/a                      │
└────────────────┴────────────────┴──────────────────────────┘
  Other reserved ports: 4400, 4500

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2020-12-12T19:49:42.904Z] [worker-~diagnostic~-1aff868b-fcb1-4afb-8932-6cd15dae78ac]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-~diagnostic~-1aff868b-fcb1-4afb-8932-6cd15dae78ac]: IDLE"}}
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T21:35:49.333Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n\n      match /events/{eventId}/{\n        allow read: true\n      }\n    }\n  }\n}"}]}}
[debug] [2020-12-12T21:35:49.377Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"539"}
[warn] !  firestore.rules:8:30 - ERROR Forward slash '/' found where identifier or binding expected. 
[warn] !  firestore.rules:9:21 - ERROR Missing 'if' before conditional expression. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T21:36:46.458Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n\n      match /events/{eventId}/{\n        allow read: if true \n      }\n    }\n  }\n}"}]}}
[debug] [2020-12-12T21:36:46.466Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"287"}
[warn] !  firestore.rules:8:30 - ERROR Forward slash '/' found where identifier or binding expected. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T21:36:57.386Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n\n      match /events/{eventId}/{\n        allow read: if true;\n      }\n    }\n  }\n}"}]}}
[debug] [2020-12-12T21:36:57.393Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"287"}
[warn] !  firestore.rules:8:30 - ERROR Forward slash '/' found where identifier or binding expected. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T21:37:06.378Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n\n      match /events/{eventId}{\n        allow read: if true;\n      }\n    }\n  }\n}"}]}}
[debug] [2020-12-12T21:37:06.386Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T21:37:53.278Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n      }\n\n\n      \n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null\n  }\n}"}]}}
[debug] [2020-12-12T21:37:53.315Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T21:46:00.774Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if isMine(); \n      }\n\n\n\n\n\n    }\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy\n  }\n\n  function isAuthenticated(){\n    return request.auth != null\n  }\n}"}]}}
[debug] [2020-12-12T21:46:00.788Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T21:58:14.743Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if isMine() && resource.data.keys().\n      }\n\n\n\n\n\n    }\n  }\n\n  function validateEventUpdate(){\n\n        let mine = isMine();\n\n        return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    let hasKeys = keys().hasAll([\"createdBy\", \"name\", \"maxSteals, currentPlayer\"]);\n    let mine = isMine();\n    return hasKeys && mine;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy\n  }\n\n  function isAuthenticated(){\n    return request.auth != null\n  }\n}"}]}}
[debug] [2020-12-12T21:58:14.765Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"241"}
[warn] !  firestore.rules:11:7 - ERROR Unexpected '}'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T21:58:20.174Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if isMine() && resource.data.keys().\n      }\n\n\n\n\n\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    let hasKeys = keys().hasAll([\"createdBy\", \"name\", \"maxSteals, currentPlayer\"]);\n    let mine = isMine();\n    return hasKeys && mine;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy\n  }\n\n  function isAuthenticated(){\n    return request.auth != null\n  }\n}"}]}}
[debug] [2020-12-12T21:58:20.183Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"241"}
[warn] !  firestore.rules:11:7 - ERROR Unexpected '}'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T21:58:32.527Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if isMine() && resource.data.keys().\n      }\n\n\n\n\n\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    let hasKeys = keys().hasAll([\"createdBy\", \"name\", \"maxSteals, currentPlayer\"]);\n    let mine = isMine();\n    return hasKeys && mine;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy\n  }\n\n  function isAuthenticated(){\n    return request.auth != null\n  }\n}"}]}}
[debug] [2020-12-12T21:58:32.537Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"241"}
[warn] !  firestore.rules:11:7 - ERROR Unexpected '}'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:00:44.801Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if isMine() && resource.data.keys().\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    let hasKeys = keys().hasOnly([\"createdBy\", \"name\", \"maxSteals, currentPlayer\"]);\n    let mine = isMine();\n    return hasKeys && mine;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy\n  }\n\n  function isAuthenticated(){\n    return request.auth != null\n  }\n}"}]}}
[debug] [2020-12-12T22:00:44.814Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"241"}
[warn] !  firestore.rules:11:7 - ERROR Unexpected '}'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:01:29.638Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if isMine() && resource.data.keys().\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    let hasKeys = event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals, currentPlayer\"]);\n    let mine = isMine();\n    return hasKeys && mine;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy\n  }\n\n  function isAuthenticated(){\n    return request.auth != null\n  }\n}"}]}}
[debug] [2020-12-12T22:01:29.648Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"241"}
[warn] !  firestore.rules:11:7 - ERROR Unexpected '}'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:02:57.405Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if isMine() && resource.data.keys().\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals, currentPlayer\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy\n  }\n\n  function isAuthenticated(){\n    return request.auth != null\n  }\n}"}]}}
[debug] [2020-12-12T22:02:57.416Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"241"}
[warn] !  firestore.rules:11:7 - ERROR Unexpected '}'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:03:12.956Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if isMine() && resource.data.keys().\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals, currentPlayer\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:03:12.976Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"241"}
[warn] !  firestore.rules:11:7 - ERROR Unexpected '}'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:03:40.205Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals, currentPlayer\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:03:40.231Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:05:15.309Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals\", \"currentPlayer\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:05:15.328Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:05:36.290Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:05:36.305Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:05:44.925Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals\", \"currentPlayer\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:05:44.939Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:06:07.782Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:06:07.805Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"251"}
[warn] !  firestore.rules:21:9 - WARNING Unused variable: event. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:06:50.837Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if true; \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals\" \"currentPlayer\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:06:50.844Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"258"}
[warn] !  firestore.rules:22:67 - ERROR Unexpected '"currentPlayer"'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:07:02.336Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals\" \"currentPlayer\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:07:02.343Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"258"}
[warn] !  firestore.rules:22:67 - ERROR Unexpected '"currentPlayer"'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:07:13.893Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals\", \"currentPlayer\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:07:13.904Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:07:36.519Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if true; \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals\", \"currentPlayer\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:07:36.530Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"510"}
[warn] !  firestore.rules:20:12 - WARNING Unused function: validateEventCreate. 
[warn] !  firestore.rules:21:17 - WARNING Invalid variable name: resource. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:08:04.805Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals\", \"currentPlayer\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:08:04.818Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:08:32.707Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let event = resource.data;\n    return event.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:08:32.718Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:08:48.626Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return resource.data.keys().hasOnly([\"createdBy\", \"name\", \"maxSteals\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:08:48.637Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:10:04.375Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return resource.data.keys().hasAll([\"createdBy\", \"name\", \"maxSteals\"]) && isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:10:04.387Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:10:27.318Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return  isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:10:27.327Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:13:20.273Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return  isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:13:20.281Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:27:24.740Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if true; \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return  isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:27:24.762Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"266"}
[warn] !  firestore.rules:20:12 - WARNING Unused function: validateEventCreate. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T22:27:52.945Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return  isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T22:27:52.954Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:23:18.937Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return true;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T23:23:18.949Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:23:29.795Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return isMine();\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T23:23:29.804Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:23:48.901Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return true;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T23:23:48.920Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:28:46.256Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n}"}]}}
[debug] [2020-12-12T23:28:46.267Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:29:16.347Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine();\n    return mine;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:29:16.359Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:32:06.595Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return request.auth.uid == resource.data.createdBy;;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:32:06.603Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"242"}
[warn] !  firestore.rules:29:56 - ERROR Unexpected ';'. 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:32:17.469Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:32:17.482Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:33:33.369Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n\n        allow create: if validateEventCreate(); \n        \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(){\n    return request.auth.uid == request.resource.data.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:33:33.378Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:33:58.250Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(){\n    return request.auth.uid == resource.data.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine();\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return request.auth.uid == request.resource.data.createdBy;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:33:58.258Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:35:30.484Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine(request.resource.data);\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine(request.resource.data);\n\n    return mine;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:35:30.497Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:38:24.946Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine(request.resource.data);\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine(request.resource.data);\n\n    let hasOnly = request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"])\n\n    return mine && hasOnly;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:38:24.954Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"249"}
[warn] !  firestore.rules:33:5 - ERROR missing ';' at 'return' 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:38:49.422Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine(request.resource.data);\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine(request.resource.data);\n\n    let hasOnly = request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]);\n\n    return mine && hasOnly;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:38:49.432Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:38:53.371Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine(request.resource.data);\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine(request.resource.data);\n\n    let hasOnly = request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]);\n\n    return mine && hasOnly;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:38:53.382Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:39:44.796Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine(request.resource.data);\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine(request.resource.data);\n\n    let hasOnly = request.resource.data.keys().hasOnly([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]);\n\n    return mine && hasOnly;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:39:44.818Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:40:28.278Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine(request.resource.data);\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine(request.resource.data);\n\n    let hasOnly = request.resource.data.keys().hasOnly([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]);\n\n    return mine && hasOnly;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:40:28.287Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:40:36.260Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine(request.resource.data);\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine(request.resource.data);\n\n    let hasOnly = request.resource.data.keys().hasOnly([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]);\n\n    return mine && hasOnly && mine;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:40:36.279Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:40:54.498Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine(request.resource.data);\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine(request.resource.data);\n\n    let hasOnly = request.resource.data.keys().hasOnly([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]);\n\n    return mine && hasOnly;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:40:54.514Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:43:49.779Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine(request.resource.data);\n    return mine;\n  }\n\n  function validateEventCreate(){\n    let mine = isMine(request.resource.data);\n\n    let hasOnly = request.resource.data.keys().hasOnly([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]);\n\n    let validName = request.resource.data.name.size() < 100\n\n    return mine && hasOnly && validName;\n  }\n\n}"}]}}
[debug] [2020-12-12T23:43:49.796Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"249"}
[warn] !  firestore.rules:35:5 - ERROR missing ';' at 'return' 
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:45:31.928Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    let mine = isMine(request.resource.data);\n    return mine;\n  }\n\n  function validateEventCreate(){\n    return request.resource.data.keys().hasOnly([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            request.resource.data.name.size() < 100\n  }\n\n}"}]}}
[debug] [2020-12-12T23:45:31.942Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:45:50.500Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    return isMine(request.resource.data);\n  }\n\n  function validateEventCreate(){\n    return request.resource.data.keys().hasOnly([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            request.resource.data.name.size() < 100\n  }\n\n}"}]}}
[debug] [2020-12-12T23:45:50.509Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-12T23:54:19.329Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    return isMine(request.resource.data);\n  }\n\n  function validateEventCreate(){\n    return request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            isEventNameValid()\n  }\n\n  function isEventNameValid(){\n    return request.resource.data.name.size() < 100\n  }\n\n}"}]}}
[debug] [2020-12-12T23:54:19.342Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-13T00:00:12.212Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    return request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            isEventNameValid()\n  }\n\n  function validateEventCreate(){\n    return request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            isEventNameValid()\n  }\n\n  function isEventNameValid(){\n    return request.resource.data.name.size() < 100\n  }\n\n}"}]}}
[debug] [2020-12-13T00:00:12.227Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-13T00:01:09.873Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    return request.resource.data.keys().hasAny([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            isEventNameValid()\n  }\n\n  function validateEventCreate(){\n    return request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            isEventNameValid()\n  }\n\n  function isEventNameValid(){\n    return request.resource.data.name.size() < 100\n  }\n\n}"}]}}
[debug] [2020-12-13T00:01:09.883Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-13T00:02:38.876Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEventCreate(); \n        allow update: if validateEventUpdate();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEventUpdate(){\n    return request.resource.data.keys().hasAny([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            isEventNameValid()\n  }\n\n  function validateEventCreate(){\n    return request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            isEventNameValid()\n  }\n\n  function isEventNameValid(){\n    return request.resource.data.name.size() < 100\n  }\n\n}"}]}}
[debug] [2020-12-13T00:02:38.889Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-13T00:04:16.781Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEvent(); \n        allow update: if validateEvent();\n      }\n    }\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEvent(){\n    return request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            isEventNameValid()\n  }\n\n  function isEventNameValid(){\n    return request.resource.data.name.size() < 100\n  }\n\n}"}]}}
[debug] [2020-12-13T00:04:16.792Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-13T00:21:58.932Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEvent(); \n        allow update: if validateEvent();\n      }\n\n      match /users/{userId}{\n        allow read: if isAuthenticated();\n        allow write: if request.auth.uid == userId\n      }\n\n      match /unwrappedGifts/{userId}{\n        allow read: if isAuthenticated();\n        allow write: if validateUnwrappedGift(userId);\n      }\n\n      match /wrappedGifts/{userId}{\n        allow read: if isAuthenticated();\n        allow write: if isAuthenticated();\n      }\n\n    }\n  }\n\n  function validateUnwrappedGift(userId){\n    return isAuthenticated() && \n            request.auth.uid == userId && \n            request.resource.data.keys().hasOnly([\"imageUrl\"])\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEvent(){\n    return request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            isEventNameValid()\n  }\n\n  function isEventNameValid(){\n    return request.resource.data.name.size() < 100\n  }\n\n}"}]}}
[debug] [2020-12-13T00:21:58.945Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[info] i  firestore: Change detected, updating rules... 
[debug] [2020-12-13T01:38:37.194Z] >>> HTTP REQUEST PUT http://localhost:8080/emulator/v1/projects/white-elephant-capps:securityRules  
 {"ignore_errors":true,"rules":{"files":[{"name":"security.rules","content":"rules_version = '2';\nservice cloud.firestore {\n  match /databases/{database}/documents {\n    match /{document=**} {\n      allow read, write: if false;\n\n      match /events/{eventId}{\n        allow read: if isAuthenticated();\n        allow create: if validateEvent(); \n        allow update: if validateEvent();\n      }\n\n      match /users/{userId}{\n        allow read: if isAuthenticated();\n        allow write: if request.auth.uid == userId\n      }\n\n      match /unwrappedGifts/{userId}{\n        allow read: if isAuthenticated();\n        allow write: if validateUnwrappedGift(userId);\n      }\n\n      match /wrappedGifts/{userId}{\n        allow read: if isAuthenticated();\n        allow write: if isAuthenticated();\n      }\n\n    }\n  }\n\n  function validateUnwrappedGift(userId){\n    return isAuthenticated() && \n            request.auth.uid == userId && \n            request.resource.data.keys().hasOnly([\"imageUrl\"])\n  }\n\n  function isAuthenticated(){\n    return request.auth != null;\n  }\n\n  function isMine(d){\n    return request.auth.uid == d.createdBy;\n  }\n\n  function validateEvent(){\n    return request.resource.data.keys().hasAll([\"name\", \"createdBy\", \"maxSteals\", \"currentPlayer\"]) &&\n            isMine(request.resource.data) &&\n            isEventNameValid()\n  }\n\n  function isEventNameValid(){\n    return request.resource.data.name.size() < 100\n  }\n\n}"}]}}
[debug] [2020-12-13T01:38:37.208Z] <<< HTTP RESPONSE 200 {"content-type":"application/json","content-length":"4"}
[info] +  firestore: Rules updated. 
[debug] [2020-12-13T18:49:50.228Z] ----------------------------------------------------------------------
[debug] [2020-12-13T18:49:50.230Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\johnp\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js emulators:start
[debug] [2020-12-13T18:49:50.230Z] CLI Version:   8.18.1
[debug] [2020-12-13T18:49:50.230Z] Platform:      win32
[debug] [2020-12-13T18:49:50.230Z] Node Version:  v12.20.0
[debug] [2020-12-13T18:49:50.231Z] Time:          Sun Dec 13 2020 10:49:50 GMT-0800 (Pacific Standard Time)
[debug] [2020-12-13T18:49:50.231Z] ----------------------------------------------------------------------
[debug] [2020-12-13T18:49:50.231Z] 
[debug] [2020-12-13T18:49:50.233Z] >>> [apiv2][query] GET https://firebase-public.firebaseio.com/cli.json [none]
[debug] [2020-12-13T18:49:50.248Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2020-12-13T18:49:50.249Z] > authorizing via signed-in user
[info] i  emulators: Starting emulators: auth, functions, firestore, hosting {"metadata":{"emulator":{"name":"hub"},"message":"Starting emulators: auth, functions, firestore, hosting"}}
[debug] [2020-12-13T18:49:50.258Z] [hub] writing locator at C:\Users\johnp\AppData\Local\Temp\hub-white-elephant-capps.json
[warn] !  functions: The following emulators are not running, calls to these services from the Functions emulator will affect production: database, pubsub {"metadata":{"emulator":{"name":"functions"},"message":"The following emulators are not running, calls to these services from the Functions emulator will affect production: \u001b[1mdatabase, pubsub\u001b[22m"}}
[info] +  functions: Using node@12 from host. {"metadata":{"emulator":{"name":"functions"},"message":"Using node@12 from host."}}
[debug] [2020-12-13T18:49:50.298Z] defaultcredentials: writing to file C:\Users\johnp\AppData\Roaming\firebase\john_pombo_gmail.com_application_default_credentials.json
[debug] [2020-12-13T18:49:50.299Z] Setting GAC to C:\Users\johnp\AppData\Roaming\firebase\john_pombo_gmail.com_application_default_credentials.json {"metadata":{"emulator":{"name":"functions"},"message":"Setting GAC to C:\\Users\\johnp\\AppData\\Roaming\\firebase\\john_pombo_gmail.com_application_default_credentials.json"}}
[debug] [2020-12-13T18:49:50.305Z] Ignoring unsupported arg: projectId {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: projectId"}}
[debug] [2020-12-13T18:49:50.305Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"firestore"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2020-12-13T18:49:50.305Z] Starting Firestore Emulator with command {"binary":"java","args":["-Dgoogle.cloud_firestore.debug_log_level=FINE","-Duser.language=en","-jar","C:\\Users\\johnp\\.cache\\firebase\\emulators\\cloud-firestore-emulator-v1.11.11.jar","--host","localhost","--port",8080,"--rules","D:\\git\\white-elephant\\firestore.rules","--functions_emulator","localhost:5001"],"optionalArgs":["port","webchannel_port","host","rules","functions_emulator","seed_from_export"],"joinArgs":false} {"metadata":{"emulator":{"name":"firestore"},"message":"Starting Firestore Emulator with command {\"binary\":\"java\",\"args\":[\"-Dgoogle.cloud_firestore.debug_log_level=FINE\",\"-Duser.language=en\",\"-jar\",\"C:\\\\Users\\\\johnp\\\\.cache\\\\firebase\\\\emulators\\\\cloud-firestore-emulator-v1.11.11.jar\",\"--host\",\"localhost\",\"--port\",8080,\"--rules\",\"D:\\\\git\\\\white-elephant\\\\firestore.rules\",\"--functions_emulator\",\"localhost:5001\"],\"optionalArgs\":[\"port\",\"webchannel_port\",\"host\",\"rules\",\"functions_emulator\",\"seed_from_export\"],\"joinArgs\":false}"}}
[info] i  firestore: Firestore Emulator logging to firestore-debug.log {"metadata":{"emulator":{"name":"firestore"},"message":"Firestore Emulator logging to \u001b[1mfirestore-debug.log\u001b[22m"}}
[debug] [2020-12-13T18:49:50.476Z] <<< [apiv2][status] GET https://firebase-public.firebaseio.com/cli.json 200
[debug] [2020-12-13T18:49:50.476Z] <<< [apiv2][body] GET https://firebase-public.firebaseio.com/cli.json {"cloudBuildErrorAfter":1594252800000,"cloudBuildWarnAfter":1590019200000,"defaultNode10After":1594252800000,"minVersion":"3.0.5","node8DeploysDisabledAfter":1613390400000,"node8RuntimeDisabledAfter":1615809600000,"node8WarnAfter":1600128000000}
[debug] [2020-12-13T18:49:53.183Z] > refreshing access token with scopes: ["email","https://www.googleapis.com/auth/cloud-platform","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","openid"]
[debug] [2020-12-13T18:49:53.183Z] >>> HTTP REQUEST POST https://www.googleapis.com/oauth2/v3/token  
 <request body omitted>
[debug] [2020-12-13T18:49:53.255Z] <<< HTTP RESPONSE 200 {"cache-control":"no-cache, no-store, max-age=0, must-revalidate","pragma":"no-cache","date":"Sun, 13 Dec 2020 18:49:53 GMT","expires":"Mon, 01 Jan 1990 00:00:00 GMT","content-type":"application/json; charset=utf-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","server":"scaffolding on HTTPServer2","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[debug] [2020-12-13T18:49:53.259Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/white-elephant-capps/webApps/-/config  
 
[debug] [2020-12-13T18:49:53.668Z] <<< HTTP RESPONSE 200 {"content-type":"application/json; charset=UTF-8","vary":"X-Origin, Referer, Origin,Accept-Encoding","date":"Sun, 13 Dec 2020 18:49:53 GMT","server":"ESF","cache-control":"private","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","alt-svc":"h3-29=\":443\"; ma=2592000,h3-T051=\":443\"; ma=2592000,h3-Q050=\":443\"; ma=2592000,h3-Q046=\":443\"; ma=2592000,h3-Q043=\":443\"; ma=2592000,quic=\":443\"; ma=2592000; v=\"46,43\"","accept-ranges":"none","transfer-encoding":"chunked"}
[info] i  hosting: Serving hosting files from: dist {"metadata":{"emulator":{"name":"hosting"},"message":"Serving hosting files from: \u001b[1mdist\u001b[22m"}}
[info] +  hosting: Local server: http://localhost:5000 {"metadata":{"emulator":{"name":"hosting"},"message":"Local server: \u001b[4m\u001b[1mhttp://localhost:5000\u001b[22m\u001b[24m"}}
[debug] [2020-12-13T18:49:53.696Z] Ignoring unsupported arg: auto_download {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: auto_download"}}
[debug] [2020-12-13T18:49:53.696Z] Ignoring unsupported arg: port {"metadata":{"emulator":{"name":"ui"},"message":"Ignoring unsupported arg: port"}}
[debug] [2020-12-13T18:49:53.696Z] Starting Emulator UI with command {"binary":"node","args":["C:\\Users\\johnp\\.cache\\firebase\\emulators\\ui-v1.3.0\\server.bundle.js"],"optionalArgs":[],"joinArgs":false} {"metadata":{"emulator":{"name":"ui"},"message":"Starting Emulator UI with command {\"binary\":\"node\",\"args\":[\"C:\\\\Users\\\\johnp\\\\.cache\\\\firebase\\\\emulators\\\\ui-v1.3.0\\\\server.bundle.js\"],\"optionalArgs\":[],\"joinArgs\":false}"}}
[info] i  ui: Emulator UI logging to ui-debug.log {"metadata":{"emulator":{"name":"ui"},"message":"Emulator UI logging to \u001b[1mui-debug.log\u001b[22m"}}
[debug] [2020-12-13T18:49:53.896Z] Web / API server started at http://localhost:4000
 {"metadata":{"emulator":{"name":"ui"},"message":"Web / API server started at http://localhost:4000\n"}}
[info] i  functions: Watching "D:\git\white-elephant\functions" for Cloud Functions... {"metadata":{"emulator":{"name":"functions"},"message":"Watching \"D:\\git\\white-elephant\\functions\" for Cloud Functions..."}}
[debug] [2020-12-13T18:49:54.098Z] [worker-pool] addWorker(~diagnostic~) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] addWorker(~diagnostic~)"}}
[debug] [2020-12-13T18:49:54.098Z] [worker-pool] Adding worker with key ~diagnostic~, total=1 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] Adding worker with key ~diagnostic~, total=1"}}
[debug] [2020-12-13T18:49:54.099Z] [worker-pool] submitWork(triggerId=) {"metadata":{"emulator":{"name":"functions"},"message":"[worker-pool] submitWork(triggerId=)"}}
[debug] [2020-12-13T18:49:54.099Z] [worker-~diagnostic~-cece1059-8de5-4399-b300-fbd2d9133d5a]: Assigning socketPath: \\?\pipe\D:\git\white-elephant\functions\8528 {"metadata":{"emulator":{"name":"functions"},"message":"[worker-~diagnostic~-cece1059-8de5-4399-b300-fbd2d9133d5a]: Assigning socketPath: \\\\?\\pipe\\D:\\git\\white-elephant\\functions\\8528"}}
[debug] [2020-12-13T18:49:54.099Z] [worker-~diagnostic~-cece1059-8de5-4399-b300-fbd2d9133d5a]: BUSY {"metadata":{"emulator":{"name":"functions"},"message":"[worker-~diagnostic~-cece1059-8de5-4399-b300-fbd2d9133d5a]: BUSY"}}
[debug] [2020-12-13T18:49:54.253Z] [runtime-status] [8528] Functions runtime initialized. {"cwd":"D:\\git\\white-elephant\\functions","node_version":"12.20.0"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Functions runtime initialized. {\"cwd\":\"D:\\\\git\\\\white-elephant\\\\functions\",\"node_version\":\"12.20.0\"}"}}
[debug] [2020-12-13T18:49:54.254Z] [runtime-status] [8528] Disabled runtime features: undefined {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Disabled runtime features: undefined"}}
[debug] [2020-12-13T18:49:54.283Z] [runtime-status] [8528] Resolved module firebase-admin {"declared":true,"installed":true,"version":"9.4.2","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-admin\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"9.4.2\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-admin\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-13T18:49:54.339Z] [runtime-status] [8528] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-13T18:49:54.340Z] [runtime-status] [8528] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-13T18:49:54.341Z] [runtime-status] [8528] Outgoing network have been stubbed. [{"name":"http","status":"mocked"},{"name":"http","status":"mocked"},{"name":"https","status":"mocked"},{"name":"https","status":"mocked"},{"name":"net","status":"mocked"}] {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Outgoing network have been stubbed. [{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"http\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"https\",\"status\":\"mocked\"},{\"name\":\"net\",\"status\":\"mocked\"}]"}}
[debug] [2020-12-13T18:49:54.341Z] [runtime-status] [8528] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-13T18:49:54.973Z] [runtime-status] [8528] Checked functions.config() {"config":{}} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Checked functions.config() {\"config\":{}}"}}
[debug] [2020-12-13T18:49:54.974Z] [runtime-status] [8528] firebase-functions has been stubbed. {"functionsResolution":{"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"}} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] firebase-functions has been stubbed. {\"functionsResolution\":{\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}}"}}
[debug] [2020-12-13T18:49:54.975Z] [runtime-status] [8528] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-13T18:49:54.977Z] [runtime-status] [8528] Resolved module firebase-admin {"declared":true,"installed":true,"version":"9.4.2","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-admin\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Resolved module firebase-admin {\"declared\":true,\"installed\":true,\"version\":\"9.4.2\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-admin\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-13T18:49:54.978Z] [runtime-status] [8528] Resolved module firebase-functions {"declared":true,"installed":true,"version":"3.13.0","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-functions\\lib\\index.js"} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] Resolved module firebase-functions {\"declared\":true,\"installed\":true,\"version\":\"3.13.0\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-functions\\\\lib\\\\index.js\"}"}}
[debug] [2020-12-13T18:49:54.979Z] [runtime-status] [8528] firebase-admin has been stubbed. {"adminResolution":{"declared":true,"installed":true,"version":"9.4.2","resolution":"D:\\git\\white-elephant\\functions\\node_modules\\firebase-admin\\lib\\index.js"}} {"metadata":{"emulator":{"name":"functions"},"message":"[runtime-status] [8528] firebase-admin has been stubbed. {\"adminResolution\":{\"declared\":true,\"installed\":true,\"version\":\"9.4.2\",\"resolution\":\"D:\\\\git\\\\white-elephant\\\\functions\\\\node_modules\\\\firebase-admin\\\\lib\\\\index.js\"}}"}}
[info] +  functions[helloWorld]: http function initialized (http://localhost:5001/white-elephant-capps/us-central1/helloWorld). {"metadata":{"emulator":{"name":"functions"},"message":"\u001b[1mhttp\u001b[22m function initialized (http://localhost:5001/white-elephant-capps/us-central1/helloWorld)."}}
[info] 
┌────────────────────────────────────────────────────────────────┐
│ ✔  All emulators ready! View status and logs at localhost:4000 │
└────────────────────────────────────────────────────────────────┘

┌────────────────┬────────────────┬──────────────────────────┐
│ Emulator       │ Host:Port      │ View in Emulator UI      │
├────────────────┼────────────────┼──────────────────────────┤
│ Authentication │ localhost:9099 │ localhost:4000/auth      │
├────────────────┼────────────────┼──────────────────────────┤
│ Functions      │ localhost:5001 │ localhost:4000/functions │
├────────────────┼────────────────┼──────────────────────────┤
│ Firestore      │ localhost:8080 │ localhost:4000/firestore │
├────────────────┼────────────────┼──────────────────────────┤
│ Hosting        │ localhost:5000 │ n/a                      │
└────────────────┴────────────────┴──────────────────────────┘
  Other reserved ports: 4400, 4500

Issues? Report them at https://github.com/firebase/firebase-tools/issues and attach the *-debug.log files.
 
[debug] [2020-12-13T18:49:54.998Z] [worker-~diagnostic~-cece1059-8de5-4399-b300-fbd2d9133d5a]: IDLE {"metadata":{"emulator":{"name":"functions"},"message":"[worker-~diagnostic~-cece1059-8de5-4399-b300-fbd2d9133d5a]: IDLE"}}
[debug] [2020-12-13T19:51:06.210Z] >>> [apiv2][query] POST http://localhost:5001/functions/projects/white-elephant-capps/trigger_multicast [none]
[debug] [2020-12-13T19:51:06.210Z] >>> [apiv2][body] POST http://localhost:5001/functions/projects/white-elephant-capps/trigger_multicast {"eventType":"providers/firebase.auth/eventTypes/user.create","data":{"uid":"f6fOTTPa0wSgSBqwEttGAv93jSCl","email":"jpombo@blizzard.com","emailVerified":true,"displayName":"John Pombo","metadata":{"creationTime":"1607889066209","lastSignInTime":"1607889066209"},"customClaims":{},"providerData":[{"providerId":"google.com","rawId":"3983627593761843592738910195354947998851","federatedId":"3983627593761843592738910195354947998851","displayName":"John Pombo","email":"jpombo@blizzard.com"}]}}
[debug] [2020-12-13T19:51:06.217Z] <<< [apiv2][status] POST http://localhost:5001/functions/projects/white-elephant-capps/trigger_multicast 200
[debug] [2020-12-13T19:51:06.218Z] <<< [apiv2][body] POST http://localhost:5001/functions/projects/white-elephant-capps/trigger_multicast {"status":"multicast_acknowledged"}
